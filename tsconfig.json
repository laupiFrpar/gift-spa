{
  "compilerOptions": {
    "baseUrl": ".",
    "esModuleInterop": true, // Recommended
    "forceConsistentCasingInFileNames": true,
    "importsNotUsedAsValues": "error", // Enforce using `import type` instead of `import` for types
    "isolatedModules": true, // Required in Vite
    "jsx": "preserve", // Required in Vue projects
    "lib": [
      "es2021",
      "dom",
    ],
    "module": "ESNext",
    "moduleResolution": "Node",

    // `"noImplicitThis": true` is part of `strict`
    // Added again here in case some users decide to disable `strict`.
    // This enables stricter inference for data properties on `this`.
    "noImplicitThis": true,

    "paths": {
      "@/*": [
        "src/*"
      ],
      "~/*": [
        "node_modules/*"
      ],
    },
    "preserveValueImports": true, // For `<script setup>, see https://devblogs.microsoft.com/typescript/announcing-typescript-4-5-beta/#preserve-value-imports
    "resolveJsonModule": true,
    "skipLibCheck": true,
    "strict": true, // Activation de la déduction stricte pour les propriétés de données sur `this`

    // A few notes:
    // - Vue 3 supports ES2016+
    // - For Vite, the actual compilation target is determined by the
    //   `build.target` option in the Vite config.
    //   So don't change the `target` field here. It has to be
    //   at least `ES2020` for dynamic `import()`s and `import.meta` to work correctly.
    // - If you are not using Vite, feel free to override the `target` field.
    "target": "ESNext",
    "types": [
      "vite/client",
      "cypress",
    ],
  },
  "exclude": [
    "node_modules",
    "public",
    "tests",
    "app",
    "**/*.js"
  ],
  "extends": "@vue/tsconfig/tsconfig.web.json",
  "include": [
    "env.d.ts",
    "src/**/*",
    "src/**/*.vue"
  ],
}
